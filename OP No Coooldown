-- ⚡ NoCooldown V9 (Max Aggression)
-- Nukes yields, cooldowns, debounces, delays

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- === YIELD NUKES ===
local function fastYield()
    return RunService.PostSimulation:Wait() -- runs as fast as engine allows
end

-- wait replacements
hookfunction(wait, fastYield)
hookfunction(task.wait, fastYield)

-- spawn/delay replacements
hookfunction(spawn, function(fn) task.spawn(fn) end)
hookfunction(delay, function(_, fn) task.spawn(fn) end)

-- RunService Wait nukes
hookfunction(RunService.Heartbeat.Wait, fastYield)
hookfunction(RunService.Stepped.Wait, fastYield)
hookfunction(RunService.RenderStepped.Wait, fastYield)
hookfunction(RunService.PostSimulation.Wait, fastYield)

-- BindableEvent/Event Wait nukes
hookfunction(game:GetService("ReplicatedStorage").ChildAdded.Wait, function() return nil end)
-- (⚠️ optional) you can also hook BindableEvent.Event:Wait if needed

-- === COOLDOWN NUKE ===
local function nukeCooldowns(obj)
    for _, v in ipairs(obj:GetDescendants()) do
        if v:IsA("BoolValue") then
            v.Value = false
            v.Changed:Connect(function()
                pcall(function() v.Value = false end)
            end)
        elseif v:IsA("NumberValue") then
            v.Value = 0
            v.Changed:Connect(function()
                pcall(function() v.Value = 0 end)
            end)
        end
    end
end

pcall(function() nukeCooldowns(LocalPlayer) end)
LocalPlayer.DescendantAdded:Connect(function(d) pcall(function() nukeCooldowns(d) end) end)

-- === OPTIONAL FAST THREAD SPAWNER ===
-- Replace task.defer with task.spawn
hookfunction(task.defer, function(fn, ...)
    return task.spawn(fn, ...)
end)

print("✅ NoCooldown V9 loaded: all yields/cooldowns nuked, max aggression.")
