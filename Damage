-- ⚡ Damage Hitbox v2 (Freeze-Safe + GUI Toggle)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- SETTINGS
_G.HeadSize = 10
_G.HitboxSize = Vector3.new(10, 10, 10)
_G.ToggleKey = Enum.KeyCode.H
_G.Enabled = false

-- === GUI BUTTON ===
local gui = Instance.new("ScreenGui")
gui.Name = "HitboxToggleUI"
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 140, 0, 50)
toggleBtn.Position = UDim2.new(0, 20, 1, -80)
toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18
toggleBtn.Text = "Hitbox: OFF"
toggleBtn.Parent = gui
Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0, 8)

local function updateButton()
	toggleBtn.Text = "Hitbox: " .. (_G.Enabled and "ON" or "OFF")
	toggleBtn.BackgroundColor3 = _G.Enabled and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(40, 40, 40)
end

local function toggleHitbox()
	_G.Enabled = not _G.Enabled
	updateButton()
end
toggleBtn.MouseButton1Click:Connect(toggleHitbox)

UserInputService.InputBegan:Connect(function(input, gpe)
	if not gpe and input.KeyCode == _G.ToggleKey then
		toggleHitbox()
	end
end)

updateButton()

-- === MAIN LOOP ===
RunService.RenderStepped:Connect(function()
	if not _G.Enabled then return end

	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character then
			local head = plr.Character:FindFirstChild("Head")
			if not head then continue end

			-- Create or update hitbox (but don't weld + set CFrame both!)
			local hitbox = plr.Character:FindFirstChild("Hitbox")
			if not hitbox then
				hitbox = Instance.new("Part")
				hitbox.Name = "Hitbox"
				hitbox.Size = _G.HitboxSize
				hitbox.Transparency = 1
				hitbox.CanCollide = false
				hitbox.Massless = true
				hitbox.Anchored = false
				hitbox.Parent = plr.Character

				local weld = Instance.new("WeldConstraint")
				weld.Part0 = head
				weld.Part1 = hitbox
				weld.Parent = hitbox

				local selection = Instance.new("SelectionBox")
				selection.Adornee = hitbox
				selection.LineThickness = 0.05
				selection.Color3 = Color3.fromRGB(255, 255, 255)
				selection.SurfaceTransparency = 0.5
				selection.Parent = hitbox

				local gui = Instance.new("BillboardGui")
				gui.Name = "HealthGui"
				gui.Adornee = hitbox
				gui.Size = UDim2.new(0, 100, 0, 25)
				gui.StudsOffset = Vector3.new(0, 3, 0)
				gui.Parent = hitbox

				local text = Instance.new("TextLabel")
				text.Name = "HealthLabel"
				text.Size = UDim2.new(1, 0, 1, 0)
				text.BackgroundTransparency = 1
				text.TextColor3 = Color3.new(1, 1, 1)
				text.TextStrokeTransparency = 0.5
				text.TextScaled = true
				text.Font = Enum.Font.GothamBold
				text.Text = "Health: ???"
				text.Parent = gui
			end

			-- Only resize / update, don't re-anchor
			head.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
			head.Massless = true
			head.CanCollide = false
			head.Transparency = 1

			local hum = plr.Character:FindFirstChildOfClass("Humanoid")
			if hum then
				local lbl = hitbox:FindFirstChild("HealthGui") and hitbox.HealthGui:FindFirstChild("HealthLabel")
				if lbl then lbl.Text = string.format("Health: %.0f", hum.Health) end
			end
		end
	end
end)

print("✅ Hitbox Damage v2 loaded (freeze-safe, toggleable)")
