-- ⚡ USE TOOLS SPAWNER / SPAMMER GUI ⚡

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- === GUI SETUP ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UseToolsSelector"
screenGui.ResetOnSpawn = false
screenGui.Parent = game.CoreGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 200, 0, 300)
mainFrame.Position = UDim2.new(0, 20, 0.4, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 10)

-- Header (draggable)
local header = Instance.new("TextLabel")
header.Size = UDim2.new(1, 0, 0, 30)
header.BackgroundColor3 = Color3.fromRGB(40, 0, 60)
header.TextColor3 = Color3.fromRGB(255, 255, 255)
header.Text = "⚡ Use Tools ⚡"
header.Font = Enum.Font.GothamBold
header.TextSize = 16
header.Parent = mainFrame
Instance.new("UICorner", header).CornerRadius = UDim.new(0, 10)

-- Draggable
local dragging, dragInput, dragStart, startPos
header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        local delta = dragInput.Position - dragStart
        mainFrame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

-- Scrolling frame
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -10, 1, -70)
scrollingFrame.Position = UDim2.new(0, 5, 0, 35)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.BorderSizePixel = 0
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollingFrame.ScrollBarThickness = 6
scrollingFrame.Parent = mainFrame

local layout = Instance.new("UIListLayout")
layout.Parent = scrollingFrame
layout.Padding = UDim.new(0, 5)

layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
end)

-- === TOOL MANAGER ===
local toolButtons = {}
local activeTools = {}
local useAllActive = false -- default off

-- Equip/Unequip helpers
local function equipTool(tool)
    if tool and tool.Parent == LocalPlayer.Backpack then
        tool.Parent = LocalPlayer.Character
    end
end
local function unequipTool(tool)
    if tool and tool.Parent == LocalPlayer.Character then
        tool.Parent = LocalPlayer.Backpack
    end
end

-- Create a tool button
local function createToolButton(tool)
    if toolButtons[tool] then return end
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 30)
    button.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = tool.Name
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.Parent = scrollingFrame
    Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)

    -- Track in table
    activeTools[tool] = false
    toolButtons[tool] = button

    -- Cleanup
    tool.AncestryChanged:Connect(function(_, parent)
        if not parent then
            activeTools[tool] = nil
            toolButtons[tool] = nil
            button:Destroy()
        end
    end)
end

-- Refresh tool list (instant)
local function refreshTools()
    -- Clear current buttons
    for _, btn in pairs(toolButtons) do btn:Destroy() end
    toolButtons = {}
    activeTools = {}

    -- Add backpack tools
    for _, tool in ipairs(LocalPlayer.Backpack:GetChildren()) do
        if tool:IsA("Tool") then createToolButton(tool) end
    end
    -- Add character tools
    if LocalPlayer.Character then
        for _, tool in ipairs(LocalPlayer.Character:GetChildren()) do
            if tool:IsA("Tool") then createToolButton(tool) end
        end
    end
end

-- Initial execute
refreshTools()

-- Update on respawn
LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(0.5)
    refreshTools()
end)
LocalPlayer.Backpack.ChildAdded:Connect(function(tool)
    if tool:IsA("Tool") then createToolButton(tool) end
end)
if LocalPlayer.Character then
    LocalPlayer.Character.ChildAdded:Connect(function(tool)
        if tool:IsA("Tool") then createToolButton(tool) end
    end)
end

-- === USE ALL BUTTON ===
local useAllBtn = Instance.new("TextButton")
useAllBtn.Size = UDim2.new(1, -10, 0, 30)
useAllBtn.Position = UDim2.new(0, 5, 1, -35)
useAllBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
useAllBtn.Text = "Use All [OFF]"
useAllBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
useAllBtn.Font = Enum.Font.GothamBold
useAllBtn.TextSize = 14
useAllBtn.Parent = mainFrame
Instance.new("UICorner", useAllBtn).CornerRadius = UDim.new(0, 6)

useAllBtn.MouseButton1Click:Connect(function()
    useAllActive = not useAllActive
    if useAllActive then
        useAllBtn.Text = "Use All [ON]"
        useAllBtn.BackgroundColor3 = Color3.fromRGB(60, 0, 90)
    else
        useAllBtn.Text = "Use All [OFF]"
        useAllBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
    end
end)

-- === TOOL SPAM LOOP ===
RunService.Heartbeat:Connect(function()
    if useAllActive then
        local char = LocalPlayer.Character
        if char then
            for tool, _ in pairs(activeTools) do
                if tool and tool.Parent ~= char then
                    equipTool(tool)
                end
                if tool then
                    pcall(function() tool:Activate() end)
                end
            end
        end
    end
end)

print("⚡ USE TOOLS SPAWNER GUI Loaded ⚡")
