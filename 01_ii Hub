-- UltraHub (mobile-friendly + fixes)
-- Updated: Mobile drag, robust minimize/restore, read-only updates page, slider max 300, theme presets save.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local CoreGui = game:GetService("CoreGui")

-- ===== Verification System =====
local allowedIDs = {
--  ==[ My Accs ]==  
    3972688973, -- My Main
    2522193455, -- My Alt
    9616513682, -- My Alt
--  ==[ Friends ]==
    8695113281, -- Eggy Alt
}
local function isVerified(userId)
    for _, id in ipairs(allowedIDs) do
        if userId == id then return true end
    end
    return false
end

if not isVerified(LocalPlayer.UserId) then
    LocalPlayer:Kick("You are not authorized to use this hub.")
    return
end

-- ======= Config / Defaults =======
local DEFAULT_THEME = {
    Accent = Color3.fromRGB(98, 53, 255),
    Background = Color3.fromRGB(15,15,20),
    Panel = Color3.fromRGB(26,26,32),
    Text = Color3.fromRGB(235,235,240),
    Muted = Color3.fromRGB(160,160,170),
    Radius = UDim.new(0, 12),
    Shadows = true
}

local ANIM = {
    Time = 0.18,
    Style = Enum.EasingStyle.Quad,
    Direction = Enum.EasingDirection.Out
}

local SETTINGS_FILE = "ultrahub_settings.json"

-- ======= Helpers =======
local function safe_pcall(fn, ...)
    local ok, res = pcall(fn, ...)
    return ok, res
end
local function tw(instance, props, t)
    t = t or ANIM.Time
    return TweenService:Create(instance, TweenInfo.new(t, ANIM.Style, ANIM.Direction), props)
end
local function addRound(parent, radius)
    local rc = Instance.new("UICorner")
    rc.CornerRadius = radius or DEFAULT_THEME.Radius
    rc.Parent = parent
    return rc
end
local function addStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Color3.fromRGB(0,0,0)
    stroke.Thickness = thickness or 1
    stroke.Parent = parent
    return stroke
end

-- ======= Load / Save settings =======
local Settings = {
    AutoExecute = false,
    Theme = {
        Accent = DEFAULT_THEME.Accent,
        Background = DEFAULT_THEME.Background,
        Panel = DEFAULT_THEME.Panel,
        Text = DEFAULT_THEME.Text,
        Muted = DEFAULT_THEME.Muted
    },
    WalkSpeed = 16,
    JumpPower = 50
}

local function loadSettings()
    if typeof(writefile) == "function" and typeof(readfile) == "function" then
        local ok, content = pcall(function() return readfile(SETTINGS_FILE) end)
        if ok and content and #content > 0 then
            local ok2, parsed = pcall(function() return HttpService:JSONDecode(content) end)
            if ok2 and type(parsed) == "table" then
                for k,v in pairs(parsed) do Settings[k] = v end
                if Settings.Theme and type(Settings.Theme) == "table" then
                    for tk, tv in pairs(Settings.Theme) do
                        if type(tv) == "table" and tv.r then
                            Settings.Theme[tk] = Color3.new(tv.r, tv.g, tv.b)
                        end
                    end
                end
            end
        end
    else
        if _G.UltraHubSettings then
            for k,v in pairs(_G.UltraHubSettings) do Settings[k] = v end
        end
    end
end

local function saveSettings()
    local copy = {
        AutoExecute = Settings.AutoExecute,
        WalkSpeed = Settings.WalkSpeed,
        JumpPower = Settings.JumpPower,
        Theme = {}
    }
    for k,v in pairs(Settings.Theme) do
        local c = v
        copy.Theme[k] = { r = c.R, g = c.G, b = c.B }
    end
    if typeof(writefile) == "function" and typeof(readfile) == "function" then
        local ok, err = pcall(function()
            writefile(SETTINGS_FILE, HttpService:JSONEncode(copy))
        end)
        if not ok then warn("UltraHub: failed to write settings:", err) end
    else
        _G.UltraHubSettings = copy
    end
end

loadSettings()

-- ======= Remove old hub if present =======
if PlayerGui:FindFirstChild("UltraHubGui") then
    PlayerGui.UltraHubGui:Destroy()
end

-- ======= UI Creation =======
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UltraHubGui"
screenGui.DisplayOrder = 999
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

-- ui scaling (mobile friendly)
local uiScale = Instance.new("UIScale")
uiScale.Parent = screenGui
local function updateScale()
    local h = workspace.CurrentCamera and workspace.CurrentCamera.ViewportSize.Y or 800
    local scale = 1
    if h <= 720 then scale = 0.85 end
    if h <= 600 then scale = 0.75 end
    if h <= 420 then scale = 0.67 end
    if h <= 360 then scale = 0.6 end
    uiScale.Scale = scale
end
updateScale()
workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(updateScale)
if workspace.CurrentCamera then
    workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateScale)
end

-- main window
local main = Instance.new("Frame")
main.Name = "Main"
main.Size = UDim2.new(0, 920, 0, 580)
main.Position = UDim2.new(0.5, 0.5, 0.5, 0)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = Settings.Theme and Settings.Theme.Background or DEFAULT_THEME.Background
main.Parent = screenGui
addRound(main, DEFAULT_THEME.Radius)
addStroke(main, Color3.fromRGB(0,0,0), 1)

local function addShadow(parent)
    if DEFAULT_THEME.Shadows then
        local shadow = Instance.new("ImageLabel")
        shadow.Name = "Shadow"
        shadow.BackgroundTransparency = 1
        shadow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
        shadow.Position = UDim2.new(0, -8, 0, -8)
        shadow.Size = UDim2.new(1, 16, 1, 16)
        shadow.ZIndex = 0
        shadow.ImageTransparency = 0.85
        shadow.Parent = parent
    end
end
addShadow(main)

-- header
local header = Instance.new("Frame")
header.Name = "Header"
header.Size = UDim2.new(1, 0, 0, 68)
header.BackgroundColor3 = Settings.Theme and Settings.Theme.Panel or DEFAULT_THEME.Panel
header.Parent = main
addRound(header, UDim.new(0, 12))

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(0, 420, 1, 0)
title.Position = UDim2.new(0, 18, 0, 0)
title.BackgroundTransparency = 1
title.Text = "ULTRA HUB"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

local subtitle = Instance.new("TextLabel")
subtitle.Name = "Subtitle"
subtitle.Size = UDim2.new(0, 520, 1, 0)
subtitle.Position = UDim2.new(0, 18, 0, 28)
subtitle.BackgroundTransparency = 1
subtitle.Text = "01_ii SPT Hub — built from scratch. Use the sidebar to open pages."
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 13
subtitle.TextColor3 = Settings.Theme and Settings.Theme.Muted or DEFAULT_THEME.Muted
subtitle.TextXAlignment = Enum.TextXAlignment.Left
subtitle.Parent = header

-- close and minimize
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "Close"
closeBtn.Size = UDim2.new(0, 36, 0, 36)
closeBtn.Position = UDim2.new(1, -52, 0, 16)
closeBtn.BackgroundColor3 = Settings.Theme and Settings.Theme.Panel or DEFAULT_THEME.Panel
closeBtn.Text = "✕"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.TextColor3 = Settings.Theme and Settings.Theme.Muted or DEFAULT_THEME.Muted
closeBtn.Parent = header
addRound(closeBtn, UDim.new(0, 8))
addStroke(closeBtn, Color3.fromRGB(0,0,0), 1)

local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Name = "Minimize"
minimizeBtn.Size = UDim2.new(0, 36, 0, 36)
minimizeBtn.Position = UDim2.new(1, -100, 0, 16)
minimizeBtn.BackgroundColor3 = Settings.Theme and Settings.Theme.Panel or DEFAULT_THEME.Panel
minimizeBtn.Text = "–"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 20
minimizeBtn.TextColor3 = Settings.Theme and Settings.Theme.Muted or DEFAULT_THEME.Muted
minimizeBtn.Parent = header
addRound(minimizeBtn, UDim.new(0, 8))
addStroke(minimizeBtn, Color3.fromRGB(0,0,0), 1)

-- Left sidebar container (scrollable)
local sidebar = Instance.new("Frame")
sidebar.Name = "Sidebar"
sidebar.Size = UDim2.new(0, 220, 1, -92)
sidebar.Position = UDim2.new(0, 0, 0, 68)
sidebar.BackgroundColor3 = Settings.Theme and Settings.Theme.Panel or DEFAULT_THEME.Panel
sidebar.Parent = main
addRound(sidebar, UDim.new(0, 12))

local sideLayout = Instance.new("UIListLayout")
sideLayout.Padding = UDim.new(0, 8)
sideLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
sideLayout.VerticalAlignment = Enum.VerticalAlignment.Top
sideLayout.SortOrder = Enum.SortOrder.LayoutOrder
sideLayout.Parent = sidebar

local sidePadding = Instance.new("UIPadding")
sidePadding.PaddingTop = UDim.new(0, 18)
sidePadding.PaddingLeft = UDim.new(0, 12)
sidePadding.PaddingRight = UDim.new(0, 12)
sidePadding.Parent = sidebar

-- Search box
local searchBox = Instance.new("TextBox")
searchBox.Name = "Search"
searchBox.Size = UDim2.new(1, -24, 0, 36)
searchBox.BackgroundColor3 = Color3.fromRGB(22,22,26)
searchBox.PlaceholderText = "Search..."
searchBox.Text = ""
searchBox.ClearTextOnFocus = false
searchBox.Font = Enum.Font.Gotham
searchBox.TextSize = 14
searchBox.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
searchBox.Parent = sidebar
addRound(searchBox, UDim.new(0, 8))
addStroke(searchBox, Color3.fromRGB(0,0,0), 1)

-- container for page buttons (scrolling)
local buttonsHolder = Instance.new("ScrollingFrame")
buttonsHolder.Name = "Buttons"
buttonsHolder.Size = UDim2.new(1, 0, 1, -86)
buttonsHolder.BackgroundTransparency = 1
buttonsHolder.ScrollBarThickness = 6
buttonsHolder.CanvasSize = UDim2.new(0,0,0,0)
buttonsHolder.AutomaticCanvasSize = Enum.AutomaticSize.Y
buttonsHolder.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
buttonsHolder.Parent = sidebar

local buttonsLayout = Instance.new("UIListLayout")
buttonsLayout.Padding = UDim.new(0, 10)
buttonsLayout.SortOrder = Enum.SortOrder.LayoutOrder
buttonsLayout.Parent = buttonsHolder

-- Right content area
local content = Instance.new("Frame")
content.Name = "Content"
content.Size = UDim2.new(1, -240, 1, -92)
content.Position = UDim2.new(0, 240, 0, 68)
content.BackgroundColor3 = Settings.Theme and Settings.Theme.Panel or DEFAULT_THEME.Panel
content.Parent = main
addRound(content, UDim.new(0, 12))
addStroke(content, Color3.fromRGB(0,0,0), 1)

local contentPadding = Instance.new("UIPadding")
contentPadding.PaddingTop = UDim.new(0, 18)
contentPadding.PaddingLeft = UDim.new(0, 18)
contentPadding.PaddingRight = UDim.new(0, 18)
contentPadding.Parent = content

local pageTitle = Instance.new("TextLabel")
pageTitle.Name = "PageTitle"
pageTitle.Size = UDim2.new(1, 0, 0, 36)
pageTitle.BackgroundTransparency = 1
pageTitle.Font = Enum.Font.GothamBold
pageTitle.TextSize = 18
pageTitle.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
pageTitle.Text = "Welcome"
pageTitle.TextXAlignment = Enum.TextXAlignment.Left
pageTitle.Parent = content

local pageArea = Instance.new("Frame")
pageArea.Name = "PageArea"
pageArea.Size = UDim2.new(1, 0, 1, -56)
pageArea.Position = UDim2.new(0, 0, 0, 40)
pageArea.BackgroundTransparency = 1
pageArea.ClipsDescendants = true
pageArea.Parent = content

-- Pages system
local Pages = {}
local currentPageName = nil

local function createPage(name)
    local p = Instance.new("ScrollingFrame")
    p.Name = name
    p.Size = UDim2.new(1, 0, 1, 0)
    p.Position = UDim2.new(1, 0, 0, 0) -- off-screen
    p.BackgroundTransparency = 1
    p.ScrollBarThickness = 8
    p.CanvasSize = UDim2.new(0,0,0,0)
    p.AutomaticCanvasSize = Enum.AutomaticSize.Y
    p.Parent = pageArea

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 10)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = p

    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 6)
    padding.PaddingLeft = UDim.new(0, 6)
    padding.PaddingRight = UDim.new(0, 6)
    padding.Parent = p

    Pages[name] = p
    return p
end

local function showPage(name)
    if currentPageName == name then return end
    local old = currentPageName and Pages[currentPageName] or nil
    local new = Pages[name]
    if not new then return end
    pageTitle.Text = name
    currentPageName = name

    if old then
        tw(old, {Position = UDim2.new(-1,0,0,0)}):Play()
    end
    new.Position = UDim2.new(1,0,0,0)
    tw(new, {Position = UDim2.new(0,0,0,0)}):Play()
    if old then
        delay(ANIM.Time + 0.02, function()
            if old and old.Parent then old.Position = UDim2.new(1,0,0,0) end
        end)
    end
end

-- Sidebar button creator
local function createSidebarButton(titleText, order)
    local btnHolder = Instance.new("Frame")
    btnHolder.Name = titleText .. "Btn"
    btnHolder.Size = UDim2.new(1, 0, 0, 44)
    btnHolder.BackgroundTransparency = 1
    btnHolder.LayoutOrder = order or 1
    btnHolder.Parent = buttonsHolder

    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 1, 0)
    btn.BackgroundColor3 = Color3.fromRGB(18,18,22)
    btn.AutoButtonColor = false
    btn.Text = ""
    btn.Parent = btnHolder
    addRound(btn, UDim.new(0, 10))
    addStroke(btn, Color3.fromRGB(0,0,0), 1)

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -70, 1, 0)
    label.Position = UDim2.new(0, 12, 0, 0)
    label.BackgroundTransparency = 1
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.TextSize = 15
    label.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
    label.Text = titleText
    label.Parent = btn

    local sub = Instance.new("TextLabel")
    sub.Size = UDim2.new(1, -70, 1, 0)
    sub.Position = UDim2.new(0, 12, 0, 18)
    sub.BackgroundTransparency = 1
    sub.TextXAlignment = Enum.TextXAlignment.Left
    sub.Font = Enum.Font.Gotham
    sub.TextSize = 11
    sub.TextColor3 = Settings.Theme and Settings.Theme.Muted or DEFAULT_THEME.Muted
    sub.Text = "Open " .. titleText
    sub.Parent = btn

    local accent = Instance.new("Frame")
    accent.Size = UDim2.new(0, 6, 1, -8)
    accent.Position = UDim2.new(1, -14, 0, 4)
    accent.AnchorPoint = Vector2.new(1, 0)
    accent.BackgroundColor3 = Settings.Theme and Settings.Theme.Accent or DEFAULT_THEME.Accent
    accent.Parent = btn
    addRound(accent, UDim.new(0, 6))
    accent.Visible = false

    btn.MouseEnter:Connect(function()
        tw(btn, {BackgroundColor3 = Color3.fromRGB(22,22,28)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        tw(btn, {BackgroundColor3 = Color3.fromRGB(18,18,22)}):Play()
    end)

    btn.MouseButton1Click:Connect(function()
        showPage(titleText)
        for _, child in ipairs(buttonsHolder:GetChildren()) do
            if child:IsA("Frame") then
                local b = child:FindFirstChildWhichIsA("TextButton")
                if b then
                    local f = b:FindFirstChildWhichIsA("Frame")
                    if f then f.Visible = false end
                end
            end
        end
        accent.Visible = true
        tw(accent, {Size = UDim2.new(0, 6, 1, -8)}):Play()
    end)

    return {
        Holder = btnHolder,
        Button = btn,
        SetSubText = function(txt) sub.Text = txt end,
        SetAccent = function(on) accent.Visible = on end
    }
end

-- Toggle helper (keeps original appearance)
local function createToggle(labelText, initial)
    local row = Instance.new("Frame")
    row.Size = UDim2.new(1, 0, 0, 46)
    row.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(0.6, 0, 1, 0)
    lbl.BackgroundTransparency = 1
    lbl.Text = labelText
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 15
    lbl.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = row

    local togg = Instance.new("Frame")
    togg.Size = UDim2.new(0, 58, 0, 28)
    togg.AnchorPoint = Vector2.new(1, 0)
    togg.Position = UDim2.new(1, -6, 0, 8)
    togg.BackgroundColor3 = Color3.fromRGB(40,40,46)
    addRound(togg, UDim.new(0, 14))
    togg.Parent = row

    local circle = Instance.new("Frame")
    circle.Size = UDim2.new(0, 24, 0, 24)
    circle.Position = UDim2.new(0, 4, 0, 2)
    circle.BackgroundColor3 = Color3.fromRGB(230,230,230)
    addRound(circle, UDim.new(0, 12))
    circle.Parent = togg

    local state = initial and true or false
    local function setState(v)
        state = not not v
        if state then
            tw(togg, {BackgroundColor3 = Settings.Theme and Settings.Theme.Accent or DEFAULT_THEME.Accent}):Play()
            tw(circle, {Position = UDim2.new(1, -28, 0, 2)}):Play()
            circle.BackgroundColor3 = Color3.fromRGB(255,255,255)
        else
            tw(togg, {BackgroundColor3 = Color3.fromRGB(40,40,46)}):Play()
            tw(circle, {Position = UDim2.new(0, 4, 0, 2)}):Play()
            circle.BackgroundColor3 = Color3.fromRGB(230,230,230)
        end
    end

    togg.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            setState(not state)
        end
    end)

    setState(state)

    return row, function() return state end, setState
end

-- Action button helper: fetch + run
local function createActionButton(textLabel, url)
    local row = Instance.new("Frame")
    row.Size = UDim2.new(1, 0, 0, 48)
    row.BackgroundTransparency = 1

    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 160, 1, 0)
    btn.Position = UDim2.new(0, 0, 0, 0)
    btn.BackgroundColor3 = Settings.Theme and Settings.Theme.Accent or DEFAULT_THEME.Accent
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = textLabel
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.Parent = row
    addRound(btn, UDim.new(0, 10))
    addStroke(btn, Color3.fromRGB(0,0,0), 1)

    local running = false
    btn.MouseButton1Click:Connect(function()
        if running then return end
        running = true
        local oldText = btn.Text
        btn.Text = "Running..."
        btn.BackgroundColor3 = Color3.fromRGB(120,120,120)
        spawn(function()
            local ok, res = pcall(function()
                if type(url) ~= "string" then error("Invalid URL") end
                local content
                local ok2, err2 = pcall(function()
                    content = game:HttpGet(url, true)
                end)
                if not ok2 then error("HttpGet failed: "..tostring(err2)) end
                local f, err = loadstring(content)
                if not f then error("loadstring failed: "..tostring(err)) end
                local ran, rerr = pcall(function() f() end)
                if not ran then error("remote script error: "..tostring(rerr)) end
                return true
            end)
            if ok then
                btn.Text = "Done"
                tw(btn, {Size = UDim2.new(0, 160, 1, 0)}, 0.12):Play()
                wait(0.8)
                btn.Text = oldText
                btn.BackgroundColor3 = Settings.Theme and Settings.Theme.Accent or DEFAULT_THEME.Accent
            else
                warn("[UltraHub] Action failed:", res)
                btn.Text = "Error"
                btn.BackgroundColor3 = Color3.fromRGB(160,50,50)
                wait(1.2)
                btn.Text = oldText
                btn.BackgroundColor3 = Settings.Theme and Settings.Theme.Accent or DEFAULT_THEME.Accent
            end
            running = false
        end)
    end)
    return row
end

-- ======= Pages & Content =======
local pageWelcome = createPage("Welcome")
local welcomeText = Instance.new("TextLabel")
welcomeText.Size = UDim2.new(1, -24, 0, 120)
welcomeText.BackgroundTransparency = 1
welcomeText.TextWrapped = true
welcomeText.TextXAlignment = Enum.TextXAlignment.Left
welcomeText.Font = Enum.Font.Gotham
welcomeText.TextSize = 14
welcomeText.TextColor3 = Settings.Theme and Settings.Theme.Muted or DEFAULT_THEME.Muted
welcomeText.Text = "Welcome to the 01_ii SPT Hub, built from scratch, cleanest hub yet, most overpowered ever!! To begin using the hub, start with getting a base with the button below!"
welcomeText.Parent = pageWelcome

local getBaseBtn = createActionButton("Get Base", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/Get%20Base%20V3.txt")
getBaseBtn.LayoutOrder = 5
getBaseBtn.Parent = pageWelcome

-- Updates page: read-only, scrollable, centered top
local updatesPage = createPage("Updates")
local updatesHeader = Instance.new("TextLabel")
updatesHeader.Size = UDim2.new(1, -24, 0, 26)
updatesHeader.BackgroundTransparency = 1
updatesHeader.Font = Enum.Font.GothamBold
updatesHeader.TextSize = 16
updatesHeader.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
updatesHeader.TextXAlignment = Enum.TextXAlignment.Left
updatesHeader.Text = "Updates"
updatesHeader.Parent = updatesPage

local updatesScroll = Instance.new("ScrollingFrame")
updatesScroll.Size = UDim2.new(1, -12, 1, -36)
updatesScroll.Position = UDim2.new(0, 6, 0, 30)
updatesScroll.BackgroundTransparency = 1
updatesScroll.BorderSizePixel = 0
updatesScroll.ScrollBarThickness = 6
updatesScroll.CanvasSize = UDim2.new(0,0,0,0)
updatesScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
updatesScroll.Parent = updatesPage

local updatesLabel = Instance.new("TextLabel")
updatesLabel.Size = UDim2.new(1, -10, 0, 0)
updatesLabel.Position = UDim2.new(0, 5, 0, 0)
updatesLabel.BackgroundTransparency = 1
updatesLabel.Text = [[
📝 Updates: 09/11/25
- Fixed No-Cooldown breaking on respawn
- Added an "Info" page to explain features
- Nav bar/page buttons made scrollable and robust
- Rewrote minimize/restore to be stable
- Optimized mobile drag & UI scaling
- OP No Cooldown updated, Insta-Kill updated, Kill Aura added
- Get Tools, Respawn, Use Tools improved for speed and reliability

More notes will be added here. This text is hard-coded and read-only.
]]
updatesLabel.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
updatesLabel.TextWrapped = true
updatesLabel.TextYAlignment = Enum.TextYAlignment.Top
updatesLabel.TextXAlignment = Enum.TextXAlignment.Center
updatesLabel.Font = Enum.Font.Gotham
updatesLabel.TextSize = 14
updatesLabel.AutomaticSize = Enum.AutomaticSize.Y
updatesLabel.Parent = updatesScroll

updatesLabel:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
    updatesScroll.CanvasSize = UDim2.new(0, 0, 0, updatesLabel.AbsoluteSize.Y + 20)
end)
updatesScroll.CanvasSize = UDim2.new(0, 0, 0, updatesLabel.AbsoluteSize.Y + 20)

-- Tools page
local toolsPage = createPage("Tool Scripts")
local toolsHeader = Instance.new("TextLabel")
toolsHeader.Size = UDim2.new(1, -24, 0, 26)
toolsHeader.BackgroundTransparency = 1
toolsHeader.Font = Enum.Font.GothamBold
toolsHeader.TextSize = 16
toolsHeader.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
toolsHeader.TextXAlignment = Enum.TextXAlignment.Left
toolsHeader.Text = "Tool Scripts"
toolsHeader.Parent = toolsPage

local tools = {
    {"Get Tools", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20Tool%20Grabber"},
    {"Use Tools", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20Use%20Tools"},
    {"OP No Cooldown", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20No%20Coooldown"},
    {"OP Insta-Kill", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20Insta-Kill"},
    {"Kill Aura", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20Kill%20Aura"},
}
for i, t in ipairs(tools) do
    local row = createActionButton(t[1], t[2])
    row.LayoutOrder = 10 + i
    row.Parent = toolsPage
end

-- Player Scripts page
local playerPage = createPage("Player Scripts")
local pHeader = Instance.new("TextLabel")
pHeader.Size = UDim2.new(1, -24, 0, 26)
pHeader.BackgroundTransparency = 1
pHeader.Font = Enum.Font.GothamBold
pHeader.TextSize = 16
pHeader.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
pHeader.TextXAlignment = Enum.TextXAlignment.Left
pHeader.Text = "Player Scripts"
pHeader.Parent = playerPage

local playerScripts = {
    {"OP Respawn", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20Respawn"},
    {"Loopbring", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/Loopbring"},
    {"Damage", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/Damage"},
    {"OP Anti-Lag", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/OP%20Anti-Lag"},
    {"Infinite Yield", "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"}
}
for i,t in ipairs(playerScripts) do
    local row = createActionButton(t[1], t[2])
    row.LayoutOrder = 10 + i
    row.Parent = playerPage
end

-- Other Scripts page
local otherPage = createPage("Other Scripts")
local oHeader = Instance.new("TextLabel")
oHeader.Size = UDim2.new(1, -24, 0, 26)
oHeader.BackgroundTransparency = 1
oHeader.Font = Enum.Font.GothamBold
oHeader.TextSize = 16
oHeader.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
oHeader.TextXAlignment = Enum.TextXAlignment.Left
oHeader.Text = "Other Scripts"
oHeader.Parent = otherPage

local otherScripts = {
    {"Escape", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/Escape"},
    {"Enemy Notifier", "https://raw.githubusercontent.com/GlitcherTheHacker/Roblox-Scripts/refs/heads/main/Enemy%20Notifier"},
}
for i,t in ipairs(otherScripts) do
    local row = createActionButton(t[1], t[2])
    row.LayoutOrder = 10 + i
    row.Parent = otherPage
end

-- ⚙️ Settings Page (with Color Wheel Theme Control)
local settingsPage = createPage("Settings")

-- Header
local sHeader = Instance.new("TextLabel")
sHeader.Size = UDim2.new(1, -24, 0, 26)
sHeader.BackgroundTransparency = 1
sHeader.Font = Enum.Font.GothamBold
sHeader.TextSize = 16
sHeader.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
sHeader.TextXAlignment = Enum.TextXAlignment.Left
sHeader.Text = "Appearance & Behavior"
sHeader.Parent = settingsPage

-- Auto Execute Toggle
local autoRow, getAutoState, setAutoState = createToggle("Auto Execute Hub on Rejoin", Settings.AutoExecute)
autoRow.LayoutOrder = 2
autoRow.Parent = settingsPage
spawn(function()
    while settingsPage.Parent do
        Settings.AutoExecute = getAutoState()
        saveSettings()
        task.wait(0.6)
    end
end)

-- === Sliders (WalkSpeed & JumpPower) ===
local function createSlider(labelText, min, max, initial)
    local row = Instance.new("Frame")
    row.Size = UDim2.new(1, 0, 0, 56)
    row.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(0.6, 0, 0, 18)
    lbl.BackgroundTransparency = 1
    lbl.Text = labelText
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = row

    local valueLbl = Instance.new("TextLabel")
    valueLbl.Size = UDim2.new(0.4, -6, 0, 18)
    valueLbl.Position = UDim2.new(0.6, 6, 0, 0)
    valueLbl.BackgroundTransparency = 1
    valueLbl.Text = tostring(initial)
    valueLbl.Font = Enum.Font.Gotham
    valueLbl.TextSize = 14
    valueLbl.TextColor3 = Settings.Theme and Settings.Theme.Muted or DEFAULT_THEME.Muted
    valueLbl.TextXAlignment = Enum.TextXAlignment.Right
    valueLbl.Parent = row

    local bar = Instance.new("Frame")
    bar.Size = UDim2.new(1, 0, 0, 14)
    bar.Position = UDim2.new(0, 0, 0, 28)
    bar.BackgroundColor3 = Color3.fromRGB(40,40,46)
    bar.Parent = row
    addRound(bar, UDim.new(0, 8))

    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((initial - min)/(max - min), 0, 1, 0)
    fill.BackgroundColor3 = Settings.Theme and Settings.Theme.Accent or DEFAULT_THEME.Accent
    fill.Parent = bar
    addRound(fill, UDim.new(0, 8))

    local dragging = false
    local function setToPercent(p)
        p = math.clamp(p, 0, 1)
        fill.Size = UDim2.new(p, 0, 1, 0)
        local val = math.floor(min + p * (max - min) + 0.5)
        valueLbl.Text = tostring(val)
        return val
    end

    local function updateFromPos(px)
        local barPos = bar.AbsolutePosition
        local barSize = bar.AbsoluteSize
        local p = (px - barPos.X) / (barSize.X)
        return setToPercent(p)
    end

    bar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            local conn
            conn = UserInputService.InputChanged:Connect(function(inp)
                if dragging and inp.Position then
                    updateFromPos(inp.Position.X)
                end
            end)
            repeat
                local pos = UserInputService:GetMouseLocation()
                updateFromPos(pos.X)
                task.wait()
            until not dragging
            conn:Disconnect()
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    setToPercent((initial - min)/(max - min))
    return row, function() return tonumber(valueLbl.Text) end
end

-- WalkSpeed / JumpPower rows
local walkRow, getWalkVal = createSlider("Player WalkSpeed", 8, 300, Settings.WalkSpeed or 16)
walkRow.LayoutOrder = 10
walkRow.Parent = settingsPage

local jumpRow, getJumpVal = createSlider("Player JumpPower", 20, 300, Settings.JumpPower or 50)
jumpRow.LayoutOrder = 11
jumpRow.Parent = settingsPage

-- Live apply movement
spawn(function()
    while true do
        local ws = getWalkVal()
        local jp = getJumpVal()
        Settings.WalkSpeed = ws
        Settings.JumpPower = jp
        local char = LocalPlayer.Character
        if char and char:FindFirstChildWhichIsA("Humanoid") then
            local hum = char:FindFirstChildWhichIsA("Humanoid")
            if hum then
                hum.WalkSpeed, hum.JumpPower = ws, jp
            end
        end
        saveSettings()
        task.wait(0.3)
    end
end)

-- === Theme Section ===
local themeHeader = Instance.new("TextLabel")
themeHeader.Size = UDim2.new(1, -24, 0, 22)
themeHeader.BackgroundTransparency = 1
themeHeader.Font = Enum.Font.GothamBold
themeHeader.TextSize = 14
themeHeader.TextColor3 = Settings.Theme and Settings.Theme.Text or DEFAULT_THEME.Text
themeHeader.TextXAlignment = Enum.TextXAlignment.Left
themeHeader.Text = "Theme"
themeHeader.Parent = settingsPage

-- Color Wheel Accent Picker
local wheelFrame = Instance.new("Frame")
wheelFrame.Size = UDim2.new(0, 150, 0, 150)
wheelFrame.Position = UDim2.new(0, 10, 0, 160)
wheelFrame.BackgroundTransparency = 1
wheelFrame.Parent = settingsPage

local wheel = Instance.new("ImageButton")
wheel.Size = UDim2.new(1,0,1,0)
wheel.BackgroundTransparency = 1
wheel.Image = "rbxassetid://6020299385" -- rainbow wheel
wheel.Parent = wheelFrame

local selector = Instance.new("Frame")
selector.Size = UDim2.new(0,10,0,10)
selector.AnchorPoint = Vector2.new(0.5,0.5)
selector.BackgroundColor3 = Color3.new(1,1,1)
selector.BorderSizePixel = 0
selector.Parent = wheel
Instance.new("UICorner", selector).CornerRadius = UDim.new(1,0)

-- Convert cursor position → Color
local function getColorFromPos(x,y)
    local rel = Vector2.new(x - wheel.AbsolutePosition.X, y - wheel.AbsolutePosition.Y)
    local radius = wheel.AbsoluteSize.X/2
    local center = Vector2.new(radius, radius)
    local dir = (rel - center).Unit
    local angle = math.atan2(dir.Y, dir.X)
    local hue = (math.deg(angle)+360)%360 / 360
    return Color3.fromHSV(hue, 1, 1)
end

local function setAccent(color, x, y)
    Settings.Theme.Accent = color
    saveSettings()
    applyTheme()
    selector.Position = UDim2.fromOffset(x - wheel.AbsolutePosition.X, y - wheel.AbsolutePosition.Y)
end

wheel.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        local pos = input.Position
        setAccent(getColorFromPos(pos.X,pos.Y), pos.X, pos.Y)
    end
end)

-- Brightness slider (dark/light background)
local brightnessRow, getBrightnessVal = createSlider("Background Brightness", 0, 100, Settings.Brightness or 20)
brightnessRow.LayoutOrder = 25
brightnessRow.Parent = settingsPage

spawn(function()
    while true do
        local b = getBrightnessVal()
        Settings.Brightness = b
        local level = b/100
        Settings.Theme.Background = Color3.new(level,level,level)
        saveSettings()
        applyTheme()
        task.wait(0.3)
    end
end)

-- Restore Defaults
local restoreBtn = Instance.new("TextButton")
restoreBtn.Size = UDim2.new(0, 160, 0, 36)
restoreBtn.Text = "Restore Defaults"
restoreBtn.Font = Enum.Font.Gotham
restoreBtn.TextSize = 14
restoreBtn.Parent = settingsPage
restoreBtn.LayoutOrder = 40
addRound(restoreBtn, UDim.new(0, 8))
restoreBtn.MouseButton1Click:Connect(function()
    Settings.Theme = DEFAULT_THEME
    Settings.WalkSpeed = 16
    Settings.JumpPower = 50
    Settings.Brightness = 20
    saveSettings()
    applyTheme()
end)

-- ======= Sidebar buttons build =======
local btnWelcome = createSidebarButton("Welcome", 1); btnWelcome.SetAccent(true)
local btnUpdates = createSidebarButton("Updates", 2)
local btnTools = createSidebarButton("Tool Scripts", 3)
local btnPlayer = createSidebarButton("Player Scripts", 4)
local btnOther = createSidebarButton("Other Scripts", 5)
local btnSettings = createSidebarButton("Settings", 6)

showPage("Welcome")

-- ======= Close + Minimize (robust) =======
local minimized = false
-- store visibility map to restore reliably
local function snapshotBodyVisibility()
    local map = {}
    for _, c in ipairs(main:GetChildren()) do
        if c ~= header and c ~= dim and c.Name ~= "Shadow" then
            map[c] = c.Visible
        end
    end
    return map
end
local function restoreBodyVisibility(map)
    if not map then return end
    for c, v in pairs(map) do
        if c and c.Parent then
            c.Visible = v
        end
    end
end

closeBtn.MouseButton1Click:Connect(function()
    tw(main, {Position = UDim2.new(0.5, 0, -1, 0), Size = UDim2.new(0, 20, 0, 20)}):Play()
    task.delay(0.25, function() screenGui:Destroy() end)
end)

-- ======= Close + Minimize (robust) =======
local minimized = false
local bodyParts = {sidebar, content} -- parts to hide/show when minimizing

closeBtn.MouseButton1Click:Connect(function()
    tw(main, {Position = UDim2.new(0.5, 0, -1, 0), Size = UDim2.new(0, 20, 0, 20)}):Play()
    task.delay(0.25, function() screenGui:Destroy() end)
end)

minimizeBtn.MouseButton1Click:Connect(function()
    if minimized then
        -- restore
        for _, p in ipairs(bodyParts) do
            p.Visible = true
        end
        tw(main, {Size = UDim2.new(0, 920, 0, 580)}):Play()
        minimized = false
    else
        -- hide body (keep header visible)
        for _, p in ipairs(bodyParts) do
            p.Visible = false
        end
        tw(main, {Size = UDim2.new(0, 380, 0, 80)}):Play()
        minimized = true
    end
end)

-- ======= DRAGGING (PC + Mobile) =======
local UserInputService = game:GetService("UserInputService")

local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    main.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = main.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- ======= Search filter for sidebar =======
searchBox:GetPropertyChangedSignal("Text"):Connect(function()
    local q = searchBox.Text:lower()
    for _, child in ipairs(buttonsHolder:GetChildren()) do
        if child:IsA("Frame") and child.Name:match("Btn$") then
            local btn = child:FindFirstChildWhichIsA("TextButton")
            local lbl = btn and btn:FindFirstChildWhichIsA("TextLabel")
            local nameText = child.Name:lower()
            local visible = q == "" or (lbl and lbl.Text:lower():find(q))
            child.Visible = visible
            child.Size = visible and UDim2.new(1,0,0,44) or UDim2.new(1,0,0,0)
            child.LayoutOrder = visible and child.LayoutOrder or 999
        end
    end
end)

-- ======= Exposed Hub API =======
local HubAPI = {}
function HubAPI.AddPage(pageName, builderFunc)
    if Pages[pageName] then warn("Page already exists:", pageName); return end
    local p = createPage(pageName)
    if type(builderFunc) == "function" then
        builderFunc(p)
    end
    createSidebarButton(pageName, #buttonsHolder:GetChildren()+1)
end
function HubAPI.GetPage(pageName) return Pages[pageName] end
function HubAPI.Show(pageName) showPage(pageName) end

-- Auto-execute behavior
if Settings.AutoExecute then
    saveSettings()
    _G.UltraHubAutoExecuted = true
end

-- Save settings periodically
spawn(function()
    while screenGui.Parent do
        saveSettings()
        task.wait(2.5)
    end
end)

_G.UltraHub = HubAPI
print("[UltraHub] Hub created and mobile fixes applied.")
